<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  width="100%" height="100%" creationComplete="init(event)">
	<fx:Metadata> 
		[Event(name="cancelClicked", type="flash.events.Event")]
		[Event(name="saveSuccess", type="flash.events.Event")]
	</fx:Metadata> 
	<fx:Script>
		<![CDATA[
			import model.RoomType;
			
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import resources.icons.Icons;
			
			import services.RoomTypeService;
			
			[Bindable]
			public var loc:Object;
			
			[Bindable]
			public var isUpdate:Boolean;
			
			private var _currentRoomType:RoomType = new RoomType(); 
			
			public function get currentRoomType():RoomType
			{
				return _currentRoomType;
			}
			
			public function set currentRoomType(value:RoomType):void
			{
				_currentRoomType = value;
				roomTypeText.text = _currentRoomType.name;
				descriptionText.text = _currentRoomType.description;
			}
			
			private function save():void{
				//TODO: validate all data
				//if(!allFieldsAreValid()){
				//	return;
				//}
				
				_currentRoomType.name = roomTypeText.text;
				_currentRoomType.description = descriptionText.text;
				
				//calls service
				if(isUpdate){
					new RoomTypeService().updateRecord(_currentRoomType,roomTypeSaved_resultHandler,faultHandler);
				}else{
					new RoomTypeService().createRecord(_currentRoomType,roomTypeSaved_resultHandler,faultHandler);
				}
			}
			
			private function roomTypeSaved_resultHandler(event:ResultEvent,token:Object=null):void {
				_currentRoomType = event.result as RoomType;
				dispatchEvent(new Event("saveSuccess"));
			}
			
			private function cancel():void{
				dispatchEvent(new Event("cancelClicked"));
			}
			
			// Handle a message fault.
			private function faultHandler(event:FaultEvent,token:Object=null):void {
				Alert.show("Received fault: " + event.fault + "\n");
			}
			
			protected function init(event:FlexEvent):void
			{
				//roomTypeText.setFocus();				
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:HGroup width="100%" horizontalAlign="center">
		<s:Form>
			<s:layout>
				<s:FormLayout gap="-14"/>
			</s:layout>  
			
			<s:FormItem label="{loc.roomType.name}:" required="true">
				<s:TextInput id="roomTypeText"/>
			</s:FormItem>
			<s:FormItem label="{loc.roomType.description}:" required="true">
				<s:TextArea id="descriptionText"/>
			</s:FormItem>
			
		</s:Form>
	</s:HGroup>
	<!-- BUTTONS -->
	<s:HGroup width="100%" height="100%" horizontalAlign="center" verticalAlign="middle">
		<s:Button label="{loc.button.save}" click="save()" icon="{Icons.save}"/>
		<s:Button label="{loc.button.cancel}" click="cancel()" icon="{Icons.cancel}"/>
	</s:HGroup>
	<s:Spacer height="5"/>
</s:VGroup>
