<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%">
	<fx:Metadata> 
		[Event(name="userSelected", type="flash.events.CloseEvent")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			import mx.containers.TitleWindow;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;
			
			import resources.icons.Icons;
			
			import utils.WindowsUtils;
			
			private static var titleWindow:TitleWindow;
			
			private var _messageText:String;
			private var _yesLabel:String;
			private var _noLabel:String;
			
			/**
			 * Use this method to show a customizable confirmDialog.
			 * It's similar to Alert.show(...) method.
			 */ 
			public static function show(title:String, message:String,listener:Function,yesLabel:String="Yes",noLabel:String="No"):void{
				var confirmDialog:ConfirmDialog = new ConfirmDialog();
				confirmDialog.messageText = message;
				confirmDialog.addEventListener("userSelected",listener);
				confirmDialog.yesLabel = yesLabel;
				confirmDialog.noLabel = noLabel;
				confirmDialog.yesButton.setFocus();
				titleWindow = WindowsUtils.openDialog(title,confirmDialog);
			}
			
			protected function yesButton_clickHandler(event:MouseEvent):void
			{
				if(titleWindow != null && titleWindow.visible){
					PopUpManager.removePopUp(titleWindow);
				}
				var closeEvent:CloseEvent = new CloseEvent("userSelected");
				closeEvent.detail=Alert.YES;
				dispatchEvent(closeEvent);
			}
			
			protected function noButton_clickHandler(event:MouseEvent):void
			{
				if(titleWindow != null && titleWindow.visible){
					PopUpManager.removePopUp(titleWindow);
				}
				var closeEvent:CloseEvent = new CloseEvent("userSelected");
				closeEvent.detail=Alert.NO;
				dispatchEvent(closeEvent);
			}
			
			[Bindable]
			public function get messageText():String
			{
				return _messageText;
			}
			
			public function set messageText(value:String):void
			{
				_messageText = value;
			}
			
			[Bindable]
			public function get yesLabel():String
			{
				return _yesLabel;
			}
			
			public function set yesLabel(value:String):void
			{
				_yesLabel = value;
			}
			
			[Bindable]
			public function get noLabel():String
			{
				return _noLabel;
			}
			
			public function set noLabel(value:String):void
			{
				_noLabel = value;
			}

		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:VGroup width="100%" height="100%" verticalAlign="middle" horizontalAlign="center"
			  paddingLeft="10" paddingRight="10" paddingBottom="10">
		<s:Label id="label" text="{messageText}" paddingTop="10" paddingBottom="10"/>
		<s:HGroup width="100" verticalAlign="middle" horizontalAlign="center">
			<s:Button id="yesButton" label="{yesLabel}" click="yesButton_clickHandler(event)" icon="{Icons.ok}"/>
			<s:Button id="noButton" label="{noLabel}" click="noButton_clickHandler(event)" icon="{Icons.cancel}"/>
		</s:HGroup>
	</s:VGroup>
</s:Group>
