<?xml version="1.0" encoding="utf-8"?>
<s:GridItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009"
					xmlns:s="library://ns.adobe.com/flex/spark"
					xmlns:mx="library://ns.adobe.com/flex/mx" clipAndEnableScrolling="true">
	<fx:Script>
		<![CDATA[
			import model.ReservationForm;
			import model.StateReservationForm;
			
			import mx.collections.ArrayCollection;
			import mx.controls.dataGridClasses.DataGridListData;
			
			import resources.Colors;
			
			import spark.components.DataGrid;

			override public function prepare(hasBeenRecycled:Boolean):void {
//				lblData.text = data[column.dataField]
			}
			
			// Write String to labelDisplay component. 
			override public function set label(value:String):void 
			{ 
				super.label = value; 
				lblData.text = label; 
				
				// Determine the RGB color value from the data item.
// 				if (label == "red")
//					backgroundColor = 0xFF0000;
//				if (label == "green")
//					backgroundColor = 0x00FF00;
//				if (label == "blue")
//					backgroundColor = 0x0000FF;
 			}
			
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
			{
				super.updateDisplayList(unscaledWidth, unscaledHeight);
				if(column == null || data == null){
					return;
				}
				var qtyAlternative:int = 0;
				var qtyConfirmed:int = 0;
				var qtyPreBooking:int = 0;
				var qtyCancelled:int = 0;
				var qtyExpired:int = 0;
				
				var list:ArrayCollection = new ArrayCollection();
				if(data[column.dataField] is ArrayCollection){
					list = data[column.dataField] as ArrayCollection;
				}else if(data is ReservationForm){
					list.addItem(data);
				}
				
				for each (var o:Object in list){
					if (o is String){ //o == "Alternative"
						qtyAlternative++;
					}else if (o is ReservationForm){
						var resForm:ReservationForm = o as ReservationForm;
						switch(resForm.state){
							case StateReservationForm.CONFIRMED:
								qtyConfirmed++;
								break;
							case StateReservationForm.PRE_BOOKING:
								qtyPreBooking++;
								break;
							case StateReservationForm.CANCELLED:
								qtyCancelled++
								break;
							case StateReservationForm.EXPIRED:
								qtyExpired++;
								break;
						}
					}
				}
				//Calculate result based on quantities
				if(qtyConfirmed>0){
					background.color = Colors.RED_COLOR;
					lblData.setStyle("color",Colors.WHITE_COLOR);
				}else if(qtyAlternative>0){
					background.color = Colors.GREEN_COLOR;
					lblData.setStyle("color",Colors.WHITE_COLOR);
				}else if(qtyPreBooking>0){
					background.color = Colors.YELLOW_COLOR;
				}else if(qtyCancelled>0){
					background.color = Colors.YELLOW_COLOR;
				}else if(qtyExpired>0){
					background.color = Colors.YELLOW_COLOR;
				}
				
				
				if(column.columnIndex == 0){
					background.color = Colors.GRAY_COLOR;
				}
				//all cells must be centered
				lblData.horizontalCenter = 0;
				
			}
		]]>
	</fx:Script>
	<s:Rect top="0" bottom="0" right="0" left="0">
		<s:fill>
			<s:SolidColor id="background" color="{Colors.WHITE_COLOR}"/>
		</s:fill>
	</s:Rect>
	<s:Label id="lblData" top="9" left="7" fontWeight="bold"/>
</s:GridItemRenderer>