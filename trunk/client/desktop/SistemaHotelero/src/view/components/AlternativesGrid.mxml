<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" xmlns:components="view.components.*">
	<fx:Metadata> 
		[Event(name="alternativeSelectedChanged", type="flash.events.Event")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import model.Alternative;
			import model.AlternativeWrapper;
			import model.Occupation;
			import model.Room;
			
			import mx.collections.ArrayCollection;
			
			import resources.Colors;
			
			import spark.events.GridSelectionEvent;
			
			import utils.DateTimeUtils;
			
			[Bindable]
			public var loc:Object;
			
			[Bindable]
			public var alternatives:ArrayCollection;
			
			[Bindable]
			public var selected:AlternativeWrapper;
			
			protected function grid_selectionChangeHandler(event:GridSelectionEvent):void
			{
				selected = grid.selectedItem as AlternativeWrapper;
				dispatchEvent(new Event("alternativeSelectedChanged"));
			}
			
			public function cleanSelection():void{
				grid.selectedItem = null;
				selected = null;
			}
			
			private function dateFormat(item:Object,column:GridColumn):String
			{
				return DateTimeUtils.formatDateWithPattern(item [column.dataField] as Date,loc.dateFormat);
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:DataGrid id="grid" width="100%" height="100%" dataProvider="{alternatives}" alternatingRowColors="{Colors.ALTERNATING_ROW_COLORS}"
				selectionChange="grid_selectionChangeHandler(event)" skinClass="view.skins.CustomDataGridSkin">
		<s:columns>
			<s:ArrayList>
				<s:GridColumn dataField="involvedRooms" headerText="{loc.alternative.involvedRooms}"></s:GridColumn>
				<s:GridColumn dataField="alternative.budget.basePrice" headerText="{loc.budget.basePrice}"></s:GridColumn>
				<s:GridColumn dataField="alternative.budget.basePricePlusAllServicesIncludedInBasePrice" headerText="{loc.budget.basePricePlusAllServicesIncludedInBasePrice}"></s:GridColumn>
				<s:GridColumn dataField="dateFrom" headerText="{loc.alternative.dateFrom}" labelFunction="dateFormat"></s:GridColumn>
				<s:GridColumn dataField="dateTo" headerText="{loc.alternative.dateTo}" labelFunction="dateFormat"></s:GridColumn>
				<s:GridColumn width="80" headerText="{loc.alternative.view}" resizable="false">
					<s:itemRenderer>
						<fx:Component>
							<s:GridItemRenderer clipAndEnableScrolling="true">
								<fx:Script>
									<![CDATA[
										import resources.icons.Icons;
									]]>
								</fx:Script>
								<s:HGroup verticalAlign="middle" horizontalAlign="center" width="100%" height="100%">
									<components:ViewAlternativeButton alternative="{data}" icon="{Icons.view}"/>
								</s:HGroup>
							</s:GridItemRenderer>
						</fx:Component>
					</s:itemRenderer>    
				</s:GridColumn>
			</s:ArrayList>
		</s:columns>
	</s:DataGrid>
</s:Group>
