<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%"
		  creationComplete="init(event)" xmlns:components="view.components.*">
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.collections.ArrayList;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import resources.icons.Icons;
			
			import services.OccupationService;
			import services.crud.RoomService;
			import services.crud.TransferService;
			
			import spark.components.gridClasses.GridColumn;
			
			import utils.DateTimeUtils;
			import utils.FaultHandler;
			import utils.log.DebugLog;
			
			import view.components.Mask;
			[Bindable]
			public var loc:Object;
			
			[Bindable] private var transfers:ArrayCollection = new ArrayCollection();
			
			protected function init(event:FlexEvent):void
			{
				fillCalendar();
			}
			
			private function fillCalendar(event:Event=null):void{
				DebugLog.log("Filling TransferCalendar, trying to loading Transfers...");
				Mask.show();
				loadTransfersToShow();
			}
			
			private function loadTransfersToShow():void{
				//TODO search by dates range
				new TransferService().retrieveTransfers(calendarNavigationBar.dateFrom, DateTimeUtils.rollDaysToDate(calendarNavigationBar.dateTo,1), retrieveAllTransfers_resultHandler,faultHandler);
			}
			
			private function retrieveAllTransfers_resultHandler(event:ResultEvent,token:Object=null):void {
				transfers = event.result as ArrayCollection;
				grid.dateFrom = calendarNavigationBar.dateFrom;
				grid.dateTo = calendarNavigationBar.dateTo;
				grid.init();
				Mask.close();
			}
			
			// Handle a message fault.
			private function faultHandler(event:FaultEvent,token:Object=null):void {
				Mask.close();
				DebugLog.log("ERROR Loading Transfers in TransferCalendar");
				FaultHandler.defaultFaultHandler(event,token);
			}
			
			
			public function refreshCalendar():void{
				fillCalendar();
			}
			
			private function navigationChanged():void{
				fillCalendar();
			}
		]]>
	</fx:Script>	
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<components:TransferGrid id="grid" height="100%" width="100%" loc="{loc}" transfers="{transfers}" editable="false"/>
	<components:CalendarNavigationBar id="calendarNavigationBar"  width="100%" loc="{loc}" 
									  navigationChanged="{navigationChanged()}"
									  refreshCalendarPressed="{refreshCalendar()}"/>
</s:VGroup>
