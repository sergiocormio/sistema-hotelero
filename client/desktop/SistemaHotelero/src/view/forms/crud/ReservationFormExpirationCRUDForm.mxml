<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" xmlns:individual="view.forms.crud.individual.*" xmlns:components="view.components.*"
		  creationComplete="init()">
	<fx:Script>
		<![CDATA[
			import flash.sampler.getInvocationCount;
			
			import model.ReservationFormExpirationDays;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import resources.Colors;
			import resources.icons.Icons;
			import resources.images.Images;
			
			import services.MigrationService;
			import services.crud.ReservationFormExpirationDaysService;
			
			import view.components.Mask;
			
			[Bindable]
			public var loc:Object;
			
			
			[Bindable]
			private var reservationFormExpirationDays:ReservationFormExpirationDays;
			
			// Handle a message fault.
			private function faultHandler(event:FaultEvent,token:Object=null):void {
				Alert.show(loc.validator.server.invalidOperation, loc.validator.error);
			}
			
			
			protected function init():void
			{
				daysToExpire.enabled = false;
				saveButton.enabled = false;
				new ReservationFormExpirationDaysService().retrieveAll(retrieveAll_resultHandler, faultHandler);
			}
			
			
			private function retrieveAll_resultHandler(event:ResultEvent,token:Object=null):void {
				
				var resFormExpDaysCollection:ArrayCollection = event.result as ArrayCollection;
				reservationFormExpirationDays = resFormExpDaysCollection.getItemAt(0) as ReservationFormExpirationDays;
				
				daysToExpire.value = Number(reservationFormExpirationDays.daysToExpire);
			}
			
			
			private function save():void{
				
				reservationFormExpirationDays.daysToExpire = daysToExpire.value;
				new ReservationFormExpirationDaysService().updateRecord(reservationFormExpirationDays, update_resultHandler, faultHandler);
			}
			
			private function update():void{
				daysToExpire.enabled = true;
				saveButton.enabled = true;
			}
			
			private function update_resultHandler(event:ResultEvent,token:Object=null):void {
				daysToExpire.enabled = false;
				saveButton.enabled = false;
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<s:Group width="100%" height="50%" horizontalCenter="0" verticalCenter="0">
		
			<s:Rect width="100%" height="100%" horizontalCenter="0" verticalCenter="0">
				<s:stroke>
					<s:SolidColorStroke color="{Colors.YELLOW_COLOR}" weight="1"/>
				</s:stroke>
				<s:fill><s:SolidColor color="{Colors.GRAY_COLOR}"/></s:fill>
			</s:Rect>
			<s:VGroup width="100%" height="100%" textAlign="center" horizontalAlign="center" verticalAlign="middle">
				
				<s:HGroup width="100%" height="100%" horizontalAlign="center" verticalAlign="middle">
									
					<s:Form>
						
						<s:FormHeading label="{loc.reservationFormExpirationDate.descriptionLabel}:"
							   textAlign="center" fontWeight="bold" fontSize="12"/>
							
						<s:FormItem />
						
						<s:FormItem label="{loc.reservationFormExpirationDate.days}:" required="true">
							<s:HGroup verticalAlign="middle">
								
								<s:NumericStepper id="daysToExpire" minimum="1" maximum="{Number.MAX_VALUE}" width="50"/>
								
								<!-- BUTTONS -->
								<s:Button label="{loc.button.modify}" click="update()" icon="{Icons.modify}" />
								<s:Button id="saveButton" label="{loc.button.save}" click="save()" icon="{Icons.save}" />
								
							</s:HGroup>
						</s:FormItem>
						
					</s:Form>
					
				</s:HGroup>
				
				<s:Spacer height="5"/>
			</s:VGroup>
		
	</s:Group>	
	
	
	
</s:VGroup>


