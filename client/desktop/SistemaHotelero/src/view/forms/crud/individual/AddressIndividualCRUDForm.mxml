<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" creationComplete="init(event)">
	<fx:Metadata> 
		[Event(name="cancelClicked", type="flash.events.Event")]
		[Event(name="saveSuccess", type="flash.events.Event")]
	</fx:Metadata> 
	<fx:Script>
		<![CDATA[
			import model.Address;
			
			import mx.controls.Alert;
			import mx.controls.Text;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.validators.Validator;
			
			import resources.Colors;
			import resources.icons.Icons;
			
			import utils.FaultHandler;
			
			[Bindable]
			public var loc:Object;
			
			private var _currentAddress:Address = new Address(); 
			
			public function get currentAddress():Address
			{
				return _currentAddress;
			}

			public function set currentAddress(value:Address):void
			{
				_currentAddress = value;
			}

			private function allFieldsAreValid():Boolean{
				
				setEnabledValidators(true);
				
				var valArray:Array = new Array();
				
				valArray.push(streetValidator);
				valArray.push(cityValidator);
				valArray.push(zipCodeValidator);
				valArray.push(stateValidator);
				valArray.push(countryValidator);
				
				var validatorErrorArray:Array = Validator.validateAll(valArray);
				var allFieldsAreValid:Boolean = validatorErrorArray.length == 0;
				
				setEnabledValidators(false);
				return allFieldsAreValid;
			}
			
			private function setEnabledValidators(enabled:Boolean):void{
				streetValidator.enabled = enabled;
				cityValidator.enabled = enabled;
				zipCodeValidator.enabled = enabled;
				stateValidator.enabled = enabled;
				countryValidator.enabled = enabled;
			}
			
			private function save():void{
				// validate all data
				if(!allFieldsAreValid()){
					return;
				}
				
				if(_currentAddress == null){
					_currentAddress = new Address();
				}
				
				_currentAddress.street = streetText.text;
				_currentAddress.city = cityText.text;
				_currentAddress.zipCode = zipCodeText.text;
				_currentAddress.state = stateText.text;
				_currentAddress.country = countryText.text;

				dispatchEvent(new Event("saveSuccess"));
			}
			
			
			private function cancel():void{
				dispatchEvent(new Event("cancelClicked"));
			}
			
			protected function init(event:FlexEvent):void
			{
				//documentTypeText.setFocus();
				if(_currentAddress != null){
					streetText.text = _currentAddress.street;
					cityText.text = _currentAddress.city;
					zipCodeText.text = _currentAddress.zipCode;
					stateText.text = _currentAddress.state;
					countryText.text = _currentAddress.country;
				}
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<mx:StringValidator id="streetValidator" 
							enabled="false"
							required="true"
							requiredFieldError="{loc.validator.requiredFieldError}" 
							source="{streetText}"
							property="text"/>
		<mx:StringValidator id="cityValidator" 
							enabled="false"
							required="true"
							requiredFieldError="{loc.validator.requiredFieldError}" 
							source="{cityText}"
							property="text"/>
		<mx:StringValidator id="zipCodeValidator" 
							enabled="false"
							required="true"
							requiredFieldError="{loc.validator.requiredFieldError}" 
							source="{zipCodeText}"
							property="text"/>
		<mx:StringValidator id="stateValidator" 
							enabled="false"
							required="true"
							requiredFieldError="{loc.validator.requiredFieldError}" 
							source="{stateText}"
							property="text"/>
		<mx:StringValidator id="countryValidator" 
							enabled="false"
							required="true"
							requiredFieldError="{loc.validator.requiredFieldError}" 
							source="{countryText}"
							property="text"/>
		
	</fx:Declarations>
	<s:Rect width="100%" height="100%">
		<s:stroke>
			<s:SolidColorStroke color="{Colors.YELLOW_COLOR}" weight="1"/>
		</s:stroke>
		<s:fill><s:SolidColor color="{Colors.GRAY_COLOR}"/></s:fill>
	</s:Rect>
	<s:VGroup width="100%" height="100%">
		<s:HGroup width="100%" horizontalAlign="center">
			<s:Form>
				<s:layout>
					<s:FormLayout gap="-14"/>
				</s:layout>  
				
				<s:FormItem label="{loc.customer.address.street}:" required="true">
					<s:TextInput id="streetText"/>
				</s:FormItem>
				<s:FormItem label="{loc.customer.address.city}:" required="true">
					<s:TextInput id="cityText"/>
				</s:FormItem>
				<s:FormItem label="{loc.customer.address.zipCode}:" required="true">
					<s:TextInput id="zipCodeText"/>
				</s:FormItem>
				<s:FormItem label="{loc.customer.address.state}:" required="true">
					<s:TextInput id="stateText"/>
				</s:FormItem>
				<s:FormItem label="{loc.customer.address.country}:" required="true">
					<s:TextInput id="countryText"/>
				</s:FormItem>
			</s:Form>
		</s:HGroup>
		<!-- BUTTONS -->
		<s:HGroup width="100%" height="100%" horizontalAlign="center" verticalAlign="middle">
			<s:Button label="{loc.button.save}" icon="{Icons.save}" click="save()"/>
			<s:Button label="{loc.button.cancel}" icon="{Icons.cancel}" click="cancel()"/>
		</s:HGroup>
		<s:Spacer height="5"/>
	</s:VGroup>
</s:Group>
