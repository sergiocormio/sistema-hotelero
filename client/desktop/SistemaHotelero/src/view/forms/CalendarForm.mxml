<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%"
		  creationComplete="init(event)" xmlns:components="view.components.*">
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.collections.ArrayList;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import resources.icons.Icons;
			
			import services.OccupationService;
			import services.crud.RoomService;
			
			import spark.components.gridClasses.GridColumn;
			
			import utils.DateTimeUtils;
			import utils.log.DebugLog;
			
			import view.components.Mask;
			[Bindable]
			public var loc:Object;
			
			[Bindable] private var occupations:ArrayCollection = new ArrayCollection();
			
			protected function init(event:FlexEvent):void
			{
				fillCalendar();
			}
			
			private function fillCalendar():void{
				Mask.show();
				loadRoomsToShow();
			}
			
			private function loadRoomsToShow():void{
				new RoomService().retrieveAll(retrieveAllRooms_resultHandler,faultHandler);
			}
			
			private function retrieveAllRooms_resultHandler(event:ResultEvent,token:Object=null):void {
				grid.roomsToShow = event.result as ArrayCollection;
				loadOccupations();
			}

			private function loadOccupations():void{
				var serv:OccupationService = new OccupationService();
				serv.retrieveOccupations(calendarNavigationBar.dateFrom,calendarNavigationBar.dateTo,retrieveOccupations_resultHandler,faultHandler);
			}
			
			private function retrieveOccupations_resultHandler(event:ResultEvent,token:Object=null):void {
				occupations.removeAll();
				occupations.addAll(event.result as ArrayCollection);
				grid.dateFrom = calendarNavigationBar.dateFrom;
				grid.dateTo = calendarNavigationBar.dateTo;
				grid.init();
				Mask.close();
			}
			
			// Handle a message fault.
			private function faultHandler(event:FaultEvent,token:Object=null):void {
				//var errCode:String = event.fault.rootCause.errorCode;
				Mask.close();
				DebugLog.log("ERROR Loading Rooms or Loading Occupations in CalendarForm");
				//Alert.show( loc.validator.server.child(errCode).text(), loc.validator.error );
			}
			
			
			public function refreshCalendar():void{
				fillCalendar();
			}
			
			private function navigationChanged():void{
				fillCalendar();
			}
		]]>
	</fx:Script>	
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<components:CalendarGrid id="grid" height="100%" width="100%" loc="{loc}" occupations="{occupations}" editable="false"/>
	<components:CalendarNavigationBar id="calendarNavigationBar"  width="100%" loc="{loc}" 
									  navigationChanged="{navigationChanged()}"
									  refreshCalendarPressed="{refreshCalendar()}"/>
</s:VGroup>
